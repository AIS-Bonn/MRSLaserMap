<launch>
	<node name="config_server" pkg="config_server" type="config_server" output="screen" required="false">
		<!--
		<param name="config_path" value="$(find mrs_laser_mapping)/config" />
		<param name="robot_name" value="$(arg robot)" />
		-->
	</node>
	
	<param name="/use_sim_time" value="true" />

	<node name="rviz_$(anon rviz)" pkg="rviz" type="rviz" args="-d $(find mrs_laser_mapping)/launch/mrs_laser_mapping.rviz" required="true" output="screen"/>
      
  <!-- filter for jump edges and -->    
  <node pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen" name="laser_filter_1">
    <remap from="scan" to="/scan_1" />
    <remap from="scan_filtered" to="/filtered_scan" />
    <param name="tf_message_filter_target_frame" type="string" value="base_link"/>
    <rosparam command="load" file="$(find mrs_laser_mapping)/config/laser_shadow_filter.yaml" />
  </node>
  <node pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen" name="laser_filter_2">
    <remap from="scan" to="/scan_2" />
    <remap from="scan_filtered" to="/filtered_scan" />
    <param name="tf_message_filter_target_frame" type="string" value="base_link"/>
    <rosparam command="load" file="$(find mrs_laser_mapping)/config/laser_shadow_filter.yaml" />
  </node>

	<arg name="halle" default="/data/bags/slam_2015-08-07-14-40-33_loop.bag"/>
	<arg name="rate" default="1.0"/>
	
	<node if="1" pkg="rosbag" type="play" name="play" args="-r $(arg rate) --clock --start=0 -u 140 $(arg halle)" output="screen" respawn="false" />

	<!-- Mapping -->
	<!-- ========= Nodeletmanager ========= -->
	<node pkg="nodelet" type="nodelet" name="mapping_nodelet"  args="manager" output="screen">
		<param name="num_worker_threads" value="50"/>
	</node>
	<!-- =================================== -->

	<node pkg="nodelet" type="nodelet" name="scan_assembler_nodelet" args="load mrs_laser_mapping/scan_assembler_nodelet mapping_nodelet" output="screen" >
		<param name="frame_id" value="/map"/>
			<param name="transform_wait_duration"    type="double"   value="0.3" />
		<param name="use_invalid_points" value="false"/>
		
		<param name="cutoff_frame_id" value="/base_link"/>
		
		<param name="filter_shadow_points" value="false"/>
		<param name="shadow_filter_min_angle" value="0.0"/>
		<param name="shadow_filter_max_angle" value="180.0"/>
		<param name="shadow_filter_window" value="1"/>
		<param name="shadow_filter_neighbors" value="5"/>
		
		<param name="cutoff_height" value="2.5"/>
		
		<param name="show_markers_of_self_filter" value="false"/>
		
		
		<remap from="~input" to="/filtered_scan" />
		

		<remap from="~output" to="/scan_assembler_nodelet/assembled_cloud" />
		
	</node>

	<!-- ========= Registration =========  -->
	<node pkg="nodelet" type="nodelet" name="map_nodelet" args="load mrs_laser_mapping/map_nodelet mapping_nodelet" output="screen" >
		<remap from="~input" to="/scan_assembler_nodelet/assembled_cloud" />
	
		<!-- frame id in which the scanlines are assembled -->
		<param name="scan_assembler_frame_id" type="str"  value="/map" />
		
		<!-- frame id of the sensor (for raytracing) -->
		<param name="sensor_frame_id" type="str" value="/rotator_link" />

		<!-- first n scans are not registered to the map (e.g if robot is standing) -->
	  <param name="min_scans_registration" type="int" value="0" />
	  
	  <!-- first n local maps are not published to the global mapping (to avoid sparse maps in alloc. map) -->
		<param name="min_scans_for_map_publishing" type="int" value="8" />

		<!-- duration in seconds for waiting for a transform  -->
		<param name="transform_wait_duration" type="double" value="0.2" />
			
		<!-- parameters for registration -->
		<param name="registration_max_iterations" type="int" value="100" />
		<param name="registration_prior_prob" type="double" value="0.25" />
		<param name="registration_soft_assoc_c1" type="double" value="0.9" />
		<param name="registration_soft_assoc_c2" type="int" value="10" />
		<param name="registration_sigma_size_factor" type="double" value="0.45" /> 
		
		<!-- parameters for the loca) map -->
		<param name="map_size" type="int" value="64" />
		<param name="map_resolution" type="double" value="8.0" />
		<param name="map_levels" type="int" value="4" />
		<param name="map_cellCapacity" type="int" value="2500" />

		<!-- parameters for downsampled map (for visualization) -->
		<param name="map_downsampled_size" type="int" value="8" />
		<param name="map_downsampled_resolution" type="double" value="20.0" />
		<param name="map_downsampled_levels" type="int" value="4" />
		<param name="map_downsampled_cell_capacity" type="int" value="100" />
		
		<!-- add scans when troso is rotated. Set to false if torso rotation results in artifacts. Default: true-->
		<param name="add_scans_when_torso_rotated" type="bool" value="true" />
		
		<param name="decrease_rate" type="double" value="0.0" />
	</node>
	
	<node pkg="nodelet" type="nodelet" name="slam_visualizer_nodelet" args="load mrs_laser_mapping/slam_visualizer_nodelet mapping_nodelet" output="screen" >
		<remap from="~keyframe_transforms" to="/map_nodelet/keyframe_transforms" />
		<remap from="~keyframes" to="/map_nodelet/keyframes" />
		<param name="voxel_leaf_size"                                               type="double"   value="0.05" />

		<param name="height_image_size_x"                                               type="double"   value="20.0" />
		<param name="height_image_size_y"                                               type="double"   value="20.0" />

		<param name="height_image_min_z"                                               type="double"   value="0.0" />
		<param name="height_image_max_z"                                               type="double"   value="1.8" />
		
		<param name="filter_limit_max_z"                                               type="double"   value="2.5" />
			
	</node>
	
	<group if="0">
	<!-- ========= SLAM =========  -->
	<node pkg="nodelet" type="nodelet" name="slam_nodelet" args="standalone mrs_laser_mapping/slam_nodelet" output="screen" >
		<remap from="~map" to="/multires_map" />

		<!-- parameters for the registration method -->
		<param name="max_iter"                                                 type="int"              value="100" />
		<param name="prior_prob"                                               type="double"   value="0.25" />
		<param name="soft_assoc_c1"                                     type="double"   value="0.9" />
		<param name="soft_assoc_c2"                                     type="int"              value="10" />
		<param name="sigma_size_factor"                                 type="double"   value="0.45" /> 

		<param name="pose_is_close_dist"                                               type="double"   value="2.0" />
		<param name="pose_is_close_angle"                                     type="double"   value="0.5" />
		<param name="pose_is_far_dist"                                               type="double"   value="2.5" />

		<param name="height_image_size_x"                                               type="double"   value="20.0" />
		<param name="height_image_size_y"                                               type="double"   value="20.0" />

		<param name="height_image_min_z"                                               type="double"   value="0.0" />
		<param name="height_image_max_z"                                               type="double"   value="2.0" />
		
	</node>

	<node pkg="nodelet" type="nodelet" name="slam_visualizer_nodelet" args="standalone mrs_laser_mapping/slam_visualizer_nodelet " output="screen" >
		<remap from="~keyframe_transforms" to="/slam_nodelet/keyframe_transforms" />
		<remap from="~keyframes" to="/slam_nodelet/keyframes" />
		<param name="voxel_leaf_size"                                               type="double"   value="0.05" />

		<param name="height_image_size_x"                                               type="double"   value="20.0" />
		<param name="height_image_size_y"                                               type="double"   value="20.0" />

		<param name="height_image_min_z"                                               type="double"   value="0.0" />
		<param name="height_image_max_z"                                               type="double"   value="2.0" />
		
	</node>
	</group>

  <!-- Run a passthrough filter to cut ceiling -->
  <node pkg="nodelet" type="nodelet" name="passthrough" args="load pcl/PassThrough mapping_nodelet" output="screen">
    <remap from="~input" to="/mapping_nodelet/pointcloud" />
    <remap from="~ouput" to="/mapping_nodelet/pointcloud_cut" />
    <rosparam>
      filter_field_name: z
      filter_limit_min: -3.0
      filter_limit_max: 3.0
      filter_limit_negative: False
    </rosparam>
  </node>

</launch>
		
